
'1d20'
'd'
'd20'
(((4d4k3)=)+((4d4k3)=)+((4d4k3)=)+((4d4k3)=)+((4d4k3)=)+((4d4k3)=)+((4d4k3)=))k6
(((4d6k3)=)+((4d6k3)=)+((4d6k3)=)+((4d6k3)=)+((4d6k3)=)+((4d6k3)=)+((4d6k3)=))k6
((4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=)k6)
(1-d10)
(1D20+5)
(1d10)d2
(1d20)
(1d20), (2d20), (3d20)
(1d20+1)=
(1d20+2)=
(1d20+3)=
(1d20+4)=
(1d20+5)=
(1d20+6)=
(1d20-1)=
(1d20-2)=
(1d20-3)=
(1d6)
(1d6+1, 'green')
(1d6=)*10(+1d6=)
(1d6=)*10(1d6=)
(2D20L1)+5
(2D20k1)+5
(2d20L1)
(2d20k1)
(2d6)
(3d20k1)
(3d6)
(3d6=)*10
(4d10-2)
(4d6)
(4d6k3,4d6k3,4d6k3,4d6k3,4d6k3,4d6k3,4d6k3)k6
(4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=)k6
(5d6)
(6d6)
(7d6)
(ifE(1d20,1,1d20)+ifE(1d20,1,1d20))k1
(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=,(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=,(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=,(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=,(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=,(ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6)+ifE(1d6,1,1d6))k3=
+ 1
+ 10
+ 2
+ 3
+ 4
+ 5
+ 6
+ 7
+ 8
+ 9
+(3d6k2)
+(3d6l2)
+1
+100
+1d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+1d(' ●△' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼' + ' ⧼⧼△' + ' ●⧼⧼△△')
+1d10
+1d100
+1d12
+1d20
+1d3
+1d4
+1d6
+1d8
+2
+2d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+2d(' ●△' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼' + ' ⧼⧼△' + ' ●⧼⧼△△')
+2d10
+2d12
+2d20
+2d3k1
+2d4
+2d6
+2d8
+3
+3D6
+3d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+3d(' ●△' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼' + ' ⧼⧼△' + ' ●⧼⧼△△')
+3d3k1
+4D6
+4d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+4d(' ●△' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼' + ' ⧼⧼△' + ' ●⧼⧼△△')
+4d3k1
+5d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+5d10
+5d12
+5d20
+5d4
+5d6
+5d8
+6d(' ●' + ' △' + ' ⧼' + ' ⧼△' + ' ⧼△' + ' ●⧼⧼')
+7
-1
-1d10+1
-1d3
-1d6
-2d3k1
-3d3k1
-4d3k1
-5
0
0 + 100
0d36
1
1 100
1 2 3
1 d2
1 d20
1 d30
1 d5
1+6
1-(1d10)
1-(1d10)=
1-10
1-100
1-1d10
1-1d104
1-d10
10
100
100 d20
10d10
10d10+13d10=
10d100
10d10>6
10d12=
10d20
10d20=
10d2=
10d4
10d4+13d10=
10d4=
10d6
10d6=
10d6>4
10d8
111
11d10
11d10>6
11d6
11d6>4
12
12d10
12d10>6
12d6
12d6>4
12d7
13d10
13d10>6
13d12=
13d20=
13d6
13d6>4
14d10
14d10>6
14d6
14d6>4
15d12=
15d20=
15d6
15d6>4
15d8
16d6
17
17d6
18d6
19d6
1D10
1D100
1D100 + 1D10
1D12
1D12 +1D6
1D12+2D6
1D12+3D 6
1D20
1D20+5
1D20+5=
1D200
1D3
1D4
1D6
1D6+2
1D6+3
1D6, 3D6
1D6,2D6,3D6,4D6
1D6=
1D7
1D8
1D[Head/Tail]
1X100
1d 20
1d!!10
1d!!100
1d!10
1d!100
1d!6
1d('👍 ' + '👎 ')
1d0
1d1
1d10
1d10 + 1d10
1d10 - 1d10
1d10+1d10
1d10+1d2
1d10+1d4
1d10+1d5
1d10+1d5 =
1d10+1d5=
1d10+1d6
1d10+1d8
1d10+2=
1d10+4=
1d10+5
1d10+6=
1d10+8=
1d10, 2d10, 3d10
1d10-1d10
1d100
1d100 + 1d10
1d100+1d10
1d100+1d10=
1d100+2d10
1d100+2d10=
1d100+3d10
1d100+3d10=
1d100-1d10
1d100-1d10=
1d100-2d10
1d100-2d10=
1d100-3d10
1d100-3d10=
1d1000
1d10000
1d10=
1d10>6
1d11
1d112
1d12
1d12+1=
1d12+1d6
1d12+1d6=
1d126
1d12=
1d13
1d14
1d15
1d15000
1d16
1d17
1d18
1d19
1d2
1d2('👍 ' + '👎 ')
1d2+1=
1d20
1d20+0=
1d20+1
1d20+10=
1d20+11=
1d20+12
1d20+18
1d20+18=
1d20+2
1d20+20=
1d20+2=
1d20+3
1d20+4
1d20+4=
1d20+5
1d20+5=
1d20+6
1d20+6=
1d20+7=
1d20+8
1d20+8=
1d20+9=
1d20, 2d20, 3d20
1d20,3d6
1d20-1
1d20-2
1d20-3
1d20-5=
1d200
1d20=
1d20k15
1d20k18
1d21
1d22
1d23
1d24
1d25
1d25+5
1d26
1d2=
1d3
1d3+1=
1d3, 1d4
1d30
1d37
1d3d6
1d4
1d4 + 1
1d4 + 1=
1d4 + 1d6
1d4 , 1d6
1d4+(1d20/10)
1d4+1
1d4+12
1d4+15
1d4+1d6
1d40
1d450
1d4=
1d5
1d50
1d500
1d6
1d6 groupC(2d6)
1d6+1
1d6+1=
1d6+2
1d6+2=
1d6+2d6
1d6+3
1d6+3=
1d6+4
1d6+4=
1d6+5
1d6+5=
1d6+6
1d6+6=
1d6, 2d6, 3d6
1d6, 2d6, 3d6, 4d6, 5d6, 6d6, 7d6, 8d6, 9d6, 10d6, 11d6, 12d6
1d6-1
1d6-1=
1d6-3
1d60
1d66
1d6=
1d6>4
1d6>=5
1d7
1d70
1d8
1d8+1d10=
1d8+5d10=
1d80
1d82
1d8=
1d9
1d9+1d9+1d10
1d90
1d[0/1/2/3/4/5/6/7/8/9]=
1d[Head \U0001f600/Tail \U0001f985]
1d[Head 😀/Tail 🦅]
1d[Pile/Face]
2
2(3d6=)k1
2*(3d6=)k1
2*3d6L1
2*3d6k1
20
200
20d20=
20d6
26
2D100K1
2D100k1
2D100l1
2D12
2D12+1D6
2D20
2D4
2D4=
2D6
2D6+3
2D6=
2D8
2D8=
2D[Head/Tail]
2d10
2d10 =
2d10+1d2
2d10+1d4
2d10+1d5
2d10+1d5 =
2d10+1d5=
2d10+1d6
2d10+1d8
2d10+2d5
2d10+2d5=
2d10+3=
2d10+4
2d100
2d100K1
2d100L1
2d100L2
2d100k2
2d100l1
2d10=
2d10>6
2d10L1
2d10k1
2d12
2d12+12
2d12+12=
2d12+16
2d12+16=
2d12=
2d12k1
2d12l1
2d16
2d17
2d2
2d20
2d20+2
2d20+6
2d20=
2d20L1
2d20L1=
2d20k1
2d20k1=
2d20l1
2d2=
2d3
2d30
2d3=
2d3k1
2d4
2d4+1
2d4+1=
2d4=
2d5
2d6
2d6 + 2
2d6 + 2=
2d6+ 7
2d6+(2d3k1)
2d6+(2d3k1)=
2d6+(3d3k1)
2d6+(3d3k1)=
2d6+(4d3k1)=
2d6+1
2d6+10
2d6+10=
2d6+12
2d6+12=
2d6+16
2d6+16=
2d6+1=
2d6+1d3
2d6+1d3=
2d6+2
2d6+2=
2d6+2d3k1
2d6+3
2d6+3=
2d6+4
2d6+4=
2d6+5
2d6+52d6+4
2d6+5=
2d6+6
2d6+6=
2d6+7
2d6+7=
2d6+8
2d6+8=
2d6,2d3k1
2d6,2d6+1,2d6+2,2d6+3,2d6-1,2d6-2
2d6,2d6,2d6,2d6,2d6,2d6,2d6
2d6-(2d3k1)
2d6-(2d3k1)=
2d6-(3d3k1)
2d6-(3d3k1)=
2d6-(4d3k1)=
2d6-1
2d6-1=
2d6-1d3
2d6-1d3=
2d6-2
2d6-2=
2d6-3
2d6-3=
2d6-4
2d6-4=
2d6-5
2d6-5=
2d6=
2d6=,2d6=,2d6=,2d6=,2d6=,2d6=,2d6=
2d6>4
2d6>=5
2d6k2
2d6k7
2d8
2d8+1d20
2d8+4
2d8+5d10
2d8=
2d9
2d[-1/0/1/1/2/3]=
2d[-1/0/1/2/3]
2d[-1/0/1/2/3]=
2d[0/1/2/3/4/5/6/7/8/9]=
2d[1/0/1/1/2/3]=
2d[1/2/3/0/0/-1]
2d[3/3/2/2/2/2/1/1/1/1/1/1/1/1/1/0/0/0/0/0/0/0]=
3
3+4
3D1
3D12
3D12, 3D6
3D4
3D4=
3D6
3D6=
3D8
3D8=
3d10
3d10 =
3d10+1d2
3d10+1d4
3d10+1d5=
3d10+1d6
3d10+1d8
3d10+3d5 =
3d10+3d5=
3d100
3d10=
3d10>6
3d10>7
3d10L1
3d12
3d12=
3d17
3d2
3d20
3d20=
3d20k1
3d3
3d3k1
3d4
3d4=
3d6
3d6+1
3d6+10
3d6+10=
3d6+18
3d6+18=
3d6+2
3d6+24
3d6+24=
3d6+3
3d6+5
3d6+5=
3d6+6
3d6+6=
3d6+7
3d6+7=
3d6+8
3d6+8=
3d6,3d6,3d6,3d6,3d6,3d6
3d6=
3d6=,3d6=,3d6=,3d6=,3d6=,3d6=
3d6==3
3d6>4
3d6>=5
3d7
3d8
3d8=
3d[-1/0/1/1/2/3]=
3d[-1/0/1/2/3]
3d[-1/0/1/2/3]=
3d[1/0/1/1/2/3]=
3d[1/2/3/0/0/-1]
3d[3/3/2/2/2/2/1/1/1/1/1/1/1/1/1/0/0/0/0/0/0/0]=
4
40
400
4D12+10
4D12+10=
4D12+50
4D12+50=
4D4
4D4=
4D6
4D6=
4D8
4D8=
4d!!6
4d!6
4d10
4d10+1d2
4d10+1d4
4d10+1d6
4d10+1d8
4d10-2
4d100
4d10=
4d10>6
4d12
4d12=
4d20
4d20=
4d2=
4d3
4d3k1
4d4
4d4=
4d5
4d6
4d6 k3
4d6 k3=
4d6-1
4d6=
4d6>4
4d6L1
4d6k3
4d6k3, 4d6k3, 4d6k3, 4d6k3, 4d6k3, 4d6k3
4d6k3,4d6k3,4d6k3,4d6k3,4d6k3,4d6k3
4d6k3=
4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=
4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=
4d8
4d8+4d10=
4d8=
4d[-1/0/1/1/2/3]=
4d[-1/0/1/2/3]
4d[-1/0/1/2/3]=
4d[1/0/1/1/2/3]=
4d[1/2/3/0/0/-1]
4d[3/3/2/2/2/2/1/1/1/1/1/1/1/1/1/0/0/0/0/0/0/0]=
5
5*(2d6+6=)
5*(2d6+6=),
5*(3d6=),
5d10
5d100
5d10<1>7
5d10>6
5d10>7
5d12
5d20
5d20=
5d4
5d4=
5d6
5d6=
5d6>4
5d6k3
5d8
5d[-1/0/1/1/2/3]=
5d[-1/0/1/2/3]
5d[-1/0/1/2/3]=
5d[1/0/1/1/2/3]=
5d[1/2/3/0/0/-1]
5d[3/3/2/2/2/2/1/1/1/1/1/1/1/1/1/0/0/0/0/0/0/0]=
6
69
6d10
6d10>6
6d20
6d20+0=
6d2=
6d4
6d4=
6d6
6d6=
6d6>4
6d8
6d8+10d10=
6d8+6d10=
6d8+7d10=
6d8+8d10=
6x(d6rr1+d6rr1+d6rr1+d6rr1)k3
6x(d6rr1+d6rr1+d6rr1+d6rr1)k3=
6x3d6=
6x4d6k3=
7
79
7D6
7d10
7d10>6
7d12
7d20=
7d4
7d6
7d6=
7d6>4
8d10
8d10>6
8d12=
8d20+0=
8d20=
8d2=
8d4
8d4+7d10=
8d4=
8d6
8d6+7d10=
8d6=
8d6>4
8d8
8d8+10d10=
8d8+8d10=
9
99
999
9d10
9d10>6
9d4
9d6
9d6>4
D!!10+10
D!!10+11
D!!10+12
D!!10+13
D!!10+14
D!!10+15
D!!10+16
D!!10+17
D!!10+18
D!!10+19
D!!10+20
D!!10+6
D!!10+7
D!!10+8
D10
D10+10
D10+11
D10+12
D10+13
D10+14
D10+15
D10+16
D10+17
D10+18
D10+19
D10+20
D10+6
D10+7
D10+8
D100
D100k2
D100l2
D12
D20
D20+3
D20+5
D3
D4
D4+D4
D6
D8
D8=
[1D6]
[1_button:1D6]
[1d10+1d10]
[4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=,4d6k3=]k6
asc(2d[Failure/Failure/Failure/Partial/Partial/Success])
asc(d6)
asc(d6c)
color(10d6,'red')
color(11d6,'red')
color(12d6,'red')
color(1D20+5=,'green')
color(1d6,'red')
color(1d6-1, 'red')
color(2d6,'red')
color(3d6,'red')
color(4d6,'red')
color(5d6,'red')
color(69, 'cyan')
color(6d6,'red')
color(7d6,'red')
color(8d6,'red')
color(9d6,'red')
color(D4, 'red')
color(d100, 'purple')
color(d20, 'red')
concat(2d6=,-2d3k1)
concat(2d6=,-2d3k1=)
concat(2d6=,-2d3l1)
d!!10
d!!10+10
d!!10+11
d!!10+12
d!!10+13
d!!10+14
d!!10+15
d!!10+16
d!!10+17
d!!10+18
d!!10+19
d!!10+20
d!!10+6
d!!10+7
d!!10+8
d!!10+9
d!!2
d10
d10+7
d10+9
d100
d10d12
d11
d12
d13
d14
d15
d16
d17
d18
d19
d2
d20
d20  d100
d20 + 8
d20+1=
d20+2
d20+2=
d20+3=
d20+4
d20+4=
d20+5
d20+5=
d20, 3d20
d20, d100
d20,4d20,5d10,2d6
d24
d3
d30
d4
d4+1=
d4+3=
d420
d47
d5
d6
d6 x2
d6+1=
d6, 2d6
d6, d6
d6,2d6
d6,2d6=
d6,3d6
d6-1
d6-1, d6, d6+1
d6-1=
d69
d7
d8
d8 + 10 + d4 +d4
d8+1=
d8+3=
d8+5=
d9
d[-1/0/1/1/2/3]=
d[-1/0/1/2/3]
d[-1/0/1/2/3]=
d[-9/-8/-7/-6/-5/-4/-3/-2/-1/0/2/2/2/2/2/2/2/2/2/2/3/3/3/3/3/3/3/3/3/3/4/4/4/4/4/4/4/4/4/4/5/5/5/5/5/5/5/5/5/5/6/6/6/6/6/6/6/6/6/6/7/7/7/7/7/7/7/7/7/7/8/8/8/8/8/8/8/8/8/8/9/9/9/9/9/9/9/9/9/9/11/12/13/14/15/16/17/18/19/20]
d[1,2,3,0,0,-1]
d[1/0/1/1/2/3]=
d[1/2/3/0/0/-1]
d[11/12/13/14/15/16/21/22/23/24/25/26/31/32/33/34/35/36/41/42/43/44/45/46/51/52/53/54/55/56/61/62/63/64/65/66]
d[3/3/2/2/2/2/1/1/1/1/1/1/1/1/1/0/0/0/0/0/0/0]=
d[destreza/fuerza/inteligencia/sabiduria/Doom]+1d8
d[destreza/fuerza/inteligencia/sabiduria]+1d8
d[fuerza/destreza/sabiduria/inteligencia]
desc(1d[Failure/Failure/Failure/Partial/Partial/Success])
desc(2d[Failure/Failure/Failure/Partial/Partial/Success])
desc(3d[Failure/Failure/Failure/Partial/Partial/Success])
desc(4d[Failure/Failure/Failure/Partial/Partial/Success])
desc(5d[Failure/Failure/Failure/Partial/Partial/Success])
desc(6d[Failure/Failure/Failure/Partial/Partial/Success])
desc(7d[Failure/Failure/Failure/Partial/Partial/Success])
groupC (10d6)
groupC (2d6)
groupC (3d6)
groupC (4d6)
groupC (5d6)
groupC (6d6)
groupC (7d6)
groupC (8d6)
groupC (9d6)
ifE(1d[0/0/0/1/1/3],3,'Success',1,'Partial','Fail')
ifE(1d[0/0/0/1/1/3],3,'Success',1,'Partial','Failure')
ifE(2d[0/0/0/1/1/3]l1,3,'Success',1,'Partial','Failure')
ifG((1-1d10)=,0,'Success','Fail' )
ifG((10-1d10)=,0,'Success','Fail' )
ifG((11-1d10)=,0,'Success','Fail' )
ifG((12-1d10)=,0,'Success','Fail' )
ifG((13-1d10)=,0,'Success','Fail' )
ifG((14-1d10)=,0,'Success','Fail' )
ifG((15-1d10)=,0,'Success','Fail' )
ifG((2-1d10)=,0,'Success','Fail' )
ifG((3-1d10)=,0,'Success','Fail' )
ifG((4-1d10)=,0,'Success','Fail' )
ifG((5-1d10)=,-1,'Success','Fail' )
ifG((5-1d10)=,0,'Success','Fail' )
ifG((6-1d10)=,0,'Success','Fail' )
ifG((7-1d10)=,0,'Success','Fail' )
ifG((8-1d10)=,0,'Success','Fail' )
ifG((9-1d10)=,0,'Success','Fail' )
ifG(2d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(2d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifG(3d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(3d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifG(4d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(4d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifG(5d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(5d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifG(6d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(6d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifG(7d[0/0/0/1/1/3]k2=,5,'Crit',2,'Success',0,'Partial','Fail')
ifG(7d[0/0/0/1/1/3]k2=,5,'Critical',2,'Success',0,'Partial','Failure')
ifL(1d100,10,'Réussi','Raté')
ifL(1d20,1, '💩 ',10,'😱  ' ,17, '😵‍💫 ' , '🤐 ')
ifL(1d20,2, '💩 ',10,'😱  ' ,17, '😵‍💫 ' , '🤐 ')
ifL(1d20,2,'💥',20, '💯 ')ifE(1d20,1,'test')
ifL(1d6,3,'low','high')
max(1d!!10)-min(1d!!10)=
max(1d!!10)-min(1d10)=
max(1d!!10-1d10)=
max(1d10)-min(1d10)
max(1d10)-min(1d10)=
max(1d20,1d20)
max(1d20,1d20)+4
max(1d20,1d20)+7
max(2d20)
max(2d20)+4
max(2d20)+4=
max(2d20)+7
max(2d20)+7=
max(2d20)=